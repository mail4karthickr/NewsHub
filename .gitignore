# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.swiftpm/config/registries.json
.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata
.netrc

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# Build artifacts
.build/
*.xcresult

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Google Services
GoogleService-Info.plist

# Environment files
.env
.env.local

# IDE
.vscode/
.idea/

# Backup files
*~
*.swp
*.swo
*.bak

# Documentation files (excluding README.md)
ARCHITECTURE_DIAGRAM.md
BUILD_FIX.md
BUILD_ISSUES_RESOLVED.md
BUILD_SUCCESS.md
CHECKLIST.md
CRASH_FIX.md
DEEPLINK_GUIDE.md
FINAL_STATUS.md
HOW_TO_FIX.md
IMPLEMENTATION_SUMMARY.md
ISSUES_RESOLVED.md
LAUNCH_COMMANDS.md
LAUNCH_DEEPLINK_GUIDE.md
MIGRATION_GUIDE.md
NAVIGATION_GUIDE.md
NAVIGATION_QUICK_REF.md
NAVIGATION_SIMPLIFIED.md
QUICK_REFERENCE.md
QUICK_START.md
SIMPLIFIED_NAVIGATION.md
TAB_NAVIGATION_GUIDE.md
UPDATE_COMPLETE.md
UPDATE_SUMMARY.md
VISUAL_FLOW.md

# Launch scripts (optional - remove this section if you want to track these)
launch-newshub.sh
launch-with-deeplink.sh
test-deeplinks.sh

# Build data
build/
